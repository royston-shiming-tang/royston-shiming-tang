#Clear environment
rm(list =ls())

#Load the rpart, rattle plot and RColorBrewer package
library(rpart)
#library(rattle)
library(rpart.plot)
library(RColorBrewer)

#Set Working Directory
setwd("C:/temp/PA/Week 7")

#Set rabdom seed. Don't remove this line.
set.seed(1)

#######Loading the Data
#Load the data and store in variable titanic
titanic <- read.csv("titanic.csv", stringsAsFactors=F)

#####Splitting the Data
#Split the data into train(65%) and test(35%) datasets
index_train <-sample(nrow(titanic), 0.65*nrow(titanic), replace=F)
train <-titanic[index_train,]
test <- titanic[-index_train,]

#Remove the PID column from train and test data
train <- train[,-1]
test <- test[,-1]

############Building a Decision Tree
#Build a tree model: tree
tree <- rpart(Survived ~.,
              data = train,
              method = "class")

# Output of the tree model
summary(tree)

#Basic plot
plot(tree, uniform = T)
text(tree)

#Fancoer plot
prp(tree, extra = 1)
rpart.plot(tree, cex=0.5)
rpart.plot(tree, extra = 4=100, box.palette = c("red","green"))

# Fanciest plot using rattle library
# fancyRpartPlot(tree)

#####Pruning
#Create complex tree by changing cp and store in large_tree
large_tree <- rpart(Survived ~.,
                    data= train,
                    method= "class",
                    control= rpart.control(cp=0.00001)
)

#Draw the complex tree
rpart.plot(large_tree, cex= 0.5)

#Pruning the tree
printcp(large_tree)
plotcp(large_tree)

#considering the tradeoff between xerror and size of tree
prune_cp <- 0.00246002

#Prune the tree: pruned
prune <- prune(large_tree, prune_cp)

#Draw pruned
rpart.plot(prune, cex= 0.5)
fancyRpartPlot(prune, cex=0.9)
####Making Predictions using a Pruned Tree Model
# Make predictions using pruned tree model & test data and store in pred
pred <- predict(prune,
                newdata = test,
                type = "class")

#construct confusion matrices using the predictions.
cm <- table(test$Survived, pred)
cm

#Compute the accuracies
acc <- sum(diag(cm))/nrow(test)


